{"{\"assumptions\":{},\"sourceRoot\":\"/Users/nikola/.npm/_npx/968b6945ac80b57b/node_modules/react-codemod/transforms/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/nikola/Desktop/react-first-app\",\"filename\":\"/Users/nikola/.npm/_npx/968b6945ac80b57b/node_modules/react-codemod/transforms/update-react-imports.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"103.0.0\",\"edge\":\"106.0.0\",\"firefox\":\"106.0.0\",\"ios\":\"12.2.0\",\"opera\":\"91.0.0\",\"safari\":\"13.1.0\",\"samsung\":\"18.0.0\"},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nikola/Desktop/react-first-app\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.7:development":{"value":{"code":"/**\n * (c) Facebook, Inc. and its affiliates. Confidential and proprietary.\n *\n * @format\n */\n\n'use strict';\n\nmodule.exports = function (file, api, options) {\n  const j = api.jscodeshift;\n  const printOptions = options.printOptions || {};\n  const root = j(file.source);\n  const destructureNamespaceImports = options.destructureNamespaceImports;\n\n  // https://github.com/facebook/jscodeshift/blob/master/recipes/retain-first-comment.md\n  function getFirstNode() {\n    return root.find(j.Program).get('body', 0).node;\n  }\n\n  // Save the comments attached to the first node\n  const firstNode = getFirstNode();\n  const {\n    comments\n  } = firstNode;\n  function isVariableDeclared(variable) {\n    return root.find(j.Identifier, {\n      name: variable\n    }).filter(path => path.parent.value.type !== 'MemberExpression' && path.parent.value.type !== 'QualifiedTypeIdentifier' && path.parent.value.type !== 'JSXMemberExpression').size() > 0;\n  }\n\n  // Get all paths that import from React\n  const reactImportPaths = root.find(j.ImportDeclaration, {\n    type: 'ImportDeclaration'\n  }).filter(path => {\n    return (path.value.source.type === 'Literal' || path.value.source.type === 'StringLiteral') && (path.value.source.value === 'React' || path.value.source.value === 'react');\n  });\n\n  // get all namespace/default React imports\n  const reactPaths = reactImportPaths.filter(path => {\n    return path.value.specifiers.length > 0 && path.value.importKind === 'value' && path.value.specifiers.some(specifier => specifier.local.name === 'React');\n  });\n  if (reactPaths.size() > 1) {\n    throw Error('There should only be one React import. Please remove the duplicate import and try again.');\n  }\n  if (reactPaths.size() === 0) {\n    return null;\n  }\n  const reactPath = reactPaths.paths()[0];\n  // Reuse the node so that we can preserve quoting style.\n  const reactLiteral = reactPath.value.source;\n  const isDefaultImport = reactPath.value.specifiers.some(specifier => specifier.type === 'ImportDefaultSpecifier' && specifier.local.name === 'React');\n\n  // Check to see if we should keep the React import\n  const isReactImportUsed = root.find(j.Identifier, {\n    name: 'React'\n  }).filter(path => {\n    return path.parent.parent.value.type !== 'ImportDeclaration';\n  }).size() > 0;\n\n  // local: imported\n  const reactIdentifiers = {};\n  const reactTypeIdentifiers = {};\n  let canDestructureReactVariable = false;\n  if (isReactImportUsed && (isDefaultImport || destructureNamespaceImports)) {\n    // Checks to see if the react variable is used itself (rather than used to access its properties)\n    canDestructureReactVariable = root.find(j.Identifier, {\n      name: 'React'\n    }).filter(path => {\n      return path.parent.parent.value.type !== 'ImportDeclaration';\n    }).filter(path => !(path.parent.value.type === 'MemberExpression' && path.parent.value.object.name === 'React') && !(path.parent.value.type === 'QualifiedTypeIdentifier' && path.parent.value.qualification.name === 'React') && !(path.parent.value.type === 'JSXMemberExpression' && path.parent.value.object.name === 'React')).size() === 0;\n    if (canDestructureReactVariable) {\n      // Add React identifiers to separate object so we can destructure the imports\n      // later if we can. If a type variable that we are trying to import has already\n      // been declared, do not try to destructure imports\n      // (ex. Element is declared and we are using React.Element)\n      root.find(j.QualifiedTypeIdentifier, {\n        qualification: {\n          type: 'Identifier',\n          name: 'React'\n        }\n      }).forEach(path => {\n        const id = path.value.id.name;\n        if (path.parent.parent.value.type === 'TypeofTypeAnnotation') {\n          // This is a typeof import so it isn't actually a type\n          reactIdentifiers[id] = id;\n          if (reactTypeIdentifiers[id]) {\n            canDestructureReactVariable = false;\n          }\n        } else {\n          reactTypeIdentifiers[id] = id;\n          if (reactIdentifiers[id]) {\n            canDestructureReactVariable = false;\n          }\n        }\n        if (isVariableDeclared(id)) {\n          canDestructureReactVariable = false;\n        }\n      });\n\n      // Add React identifiers to separate object so we can destructure the imports\n      // later if we can. If a variable that we are trying to import has already\n      // been declared, do not try to destructure imports\n      // (ex. createElement is declared and we are using React.createElement)\n      root.find(j.MemberExpression, {\n        object: {\n          type: 'Identifier',\n          name: 'React'\n        }\n      }).forEach(path => {\n        const property = path.value.property.name;\n        reactIdentifiers[property] = property;\n        if (isVariableDeclared(property) || reactTypeIdentifiers[property]) {\n          canDestructureReactVariable = false;\n        }\n      });\n\n      // Add React identifiers to separate object so we can destructure the imports\n      // later if we can. If a JSX variable that we are trying to import has already\n      // been declared, do not try to destructure imports\n      // (ex. Fragment is declared and we are using React.Fragment)\n      root.find(j.JSXMemberExpression, {\n        object: {\n          type: 'JSXIdentifier',\n          name: 'React'\n        }\n      }).forEach(path => {\n        const property = path.value.property.name;\n        reactIdentifiers[property] = property;\n        if (isVariableDeclared(property) || reactTypeIdentifiers[property]) {\n          canDestructureReactVariable = false;\n        }\n      });\n    }\n  }\n  if (canDestructureReactVariable) {\n    // replace react identifiers\n    root.find(j.QualifiedTypeIdentifier, {\n      qualification: {\n        type: 'Identifier',\n        name: 'React'\n      }\n    }).forEach(path => {\n      const id = path.value.id.name;\n      j(path).replaceWith(j.identifier(id));\n    });\n    root.find(j.MemberExpression, {\n      object: {\n        type: 'Identifier',\n        name: 'React'\n      }\n    }).forEach(path => {\n      const property = path.value.property.name;\n      j(path).replaceWith(j.identifier(property));\n    });\n    root.find(j.JSXMemberExpression, {\n      object: {\n        type: 'JSXIdentifier',\n        name: 'React'\n      }\n    }).forEach(path => {\n      const property = path.value.property.name;\n      j(path).replaceWith(j.jsxIdentifier(property));\n    });\n\n    // Add exisiting React imports to map\n    reactImportPaths.forEach(path => {\n      const specifiers = path.value.specifiers;\n      for (let i = 0; i < specifiers.length; i++) {\n        const specifier = specifiers[i];\n        // get all type and regular imports that are imported\n        // from React\n        if (specifier.type === 'ImportSpecifier') {\n          if (path.value.importKind === 'type' || specifier.importKind === 'type') {\n            reactTypeIdentifiers[specifier.local.name] = specifier.imported.name;\n          } else {\n            reactIdentifiers[specifier.local.name] = specifier.imported.name;\n          }\n        }\n      }\n    });\n    const regularImports = [];\n    Object.keys(reactIdentifiers).forEach(local => {\n      const imported = reactIdentifiers[local];\n      regularImports.push(j.importSpecifier(j.identifier(imported), j.identifier(local)));\n    });\n    const typeImports = [];\n    Object.keys(reactTypeIdentifiers).forEach(local => {\n      const imported = reactTypeIdentifiers[local];\n      typeImports.push(j.importSpecifier(j.identifier(imported), j.identifier(local)));\n    });\n    if (regularImports.length > 0) {\n      j(reactPath).insertAfter(j.importDeclaration(regularImports, reactLiteral));\n    }\n    if (typeImports.length > 0) {\n      j(reactPath).insertAfter(j.importDeclaration(typeImports, reactLiteral, 'type'));\n    }\n\n    // remove all old react imports\n    reactImportPaths.forEach(path => {\n      // This is for import type React from 'react' which shouldn't\n      // be removed\n      if (path.value.specifiers.some(specifier => specifier.type === 'ImportDefaultSpecifier' && specifier.local.name === 'React' && (specifier.importKind === 'type' || path.value.importKind === 'type'))) {\n        j(path).insertAfter(j.importDeclaration([j.importDefaultSpecifier(j.identifier('React'))], reactLiteral, 'type'));\n      }\n      j(path).remove();\n    });\n  } else {\n    // Remove the import because it's not being used\n    // If we should keep the React import, just convert\n    // default imports to named imports\n    let isImportRemoved = false;\n    const specifiers = reactPath.value.specifiers;\n    for (let i = 0; i < specifiers.length; i++) {\n      const specifier = specifiers[i];\n      if (specifier.type === 'ImportNamespaceSpecifier') {\n        if (!isReactImportUsed) {\n          isImportRemoved = true;\n          j(reactPath).remove();\n        }\n      } else if (specifier.type === 'ImportDefaultSpecifier') {\n        if (isReactImportUsed) {\n          j(reactPath).insertAfter(j.importDeclaration([j.importNamespaceSpecifier(j.identifier('React'))], reactLiteral));\n        }\n        if (specifiers.length > 1) {\n          const typeImports = [];\n          const regularImports = [];\n          for (let x = 0; x < specifiers.length; x++) {\n            if (specifiers[x].type !== 'ImportDefaultSpecifier') {\n              if (specifiers[x].importKind === 'type') {\n                typeImports.push(specifiers[x]);\n              } else {\n                regularImports.push(specifiers[x]);\n              }\n            }\n          }\n          if (regularImports.length > 0) {\n            j(reactPath).insertAfter(j.importDeclaration(regularImports, reactLiteral));\n          }\n          if (typeImports.length > 0) {\n            j(reactPath).insertAfter(j.importDeclaration(typeImports, reactLiteral, 'type'));\n          }\n        }\n        isImportRemoved = true;\n        j(reactPath).remove();\n      }\n    }\n    if (!isImportRemoved) {\n      return null;\n    }\n  }\n\n  // If the first node has been modified or deleted, reattach the comments\n  const firstNode2 = getFirstNode();\n  if (firstNode2 !== firstNode) {\n    firstNode2.comments = comments;\n  }\n  return root.toSource(printOptions);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["module","exports","file","api","options","j","jscodeshift","printOptions","root","source","destructureNamespaceImports","getFirstNode","find","Program","get","node","firstNode","comments","isVariableDeclared","variable","Identifier","name","filter","path","parent","value","type","size","reactImportPaths","ImportDeclaration","reactPaths","specifiers","length","importKind","some","specifier","local","Error","reactPath","paths","reactLiteral","isDefaultImport","isReactImportUsed","reactIdentifiers","reactTypeIdentifiers","canDestructureReactVariable","object","qualification","QualifiedTypeIdentifier","forEach","id","MemberExpression","property","JSXMemberExpression","replaceWith","identifier","jsxIdentifier","i","imported","regularImports","Object","keys","push","importSpecifier","typeImports","insertAfter","importDeclaration","importDefaultSpecifier","remove","isImportRemoved","importNamespaceSpecifier","x","firstNode2","toSource"],"sourceRoot":"/Users/nikola/.npm/_npx/968b6945ac80b57b/node_modules/react-codemod/transforms/","sources":["update-react-imports.js"],"sourcesContent":["/**\n * (c) Facebook, Inc. and its affiliates. Confidential and proprietary.\n *\n * @format\n */\n\n'use strict';\n\nmodule.exports = function(file, api, options) {\n  const j = api.jscodeshift;\n  const printOptions = options.printOptions || {};\n  const root = j(file.source);\n  const destructureNamespaceImports = options.destructureNamespaceImports;\n\n  // https://github.com/facebook/jscodeshift/blob/master/recipes/retain-first-comment.md\n  function getFirstNode() {\n    return root.find(j.Program).get('body', 0).node;\n  }\n\n  // Save the comments attached to the first node\n  const firstNode = getFirstNode();\n  const { comments } = firstNode;\n\n  function isVariableDeclared(variable) {\n    return (\n      root\n        .find(j.Identifier, {\n          name: variable,\n        })\n        .filter(\n          path =>\n            path.parent.value.type !== 'MemberExpression' &&\n            path.parent.value.type !== 'QualifiedTypeIdentifier' &&\n            path.parent.value.type !== 'JSXMemberExpression',\n        )\n        .size() > 0\n    );\n  }\n\n  // Get all paths that import from React\n  const reactImportPaths = root\n    .find(j.ImportDeclaration, {\n      type: 'ImportDeclaration',\n    })\n    .filter(path => {\n      return (\n        (\n          path.value.source.type === 'Literal' ||\n          path.value.source.type === 'StringLiteral'\n        ) && (\n          path.value.source.value === 'React' ||\n          path.value.source.value === 'react'\n        )\n      );\n    });\n\n  // get all namespace/default React imports\n  const reactPaths = reactImportPaths.filter(path => {\n    return (\n      path.value.specifiers.length > 0 &&\n      path.value.importKind === 'value' &&\n      path.value.specifiers.some(specifier => specifier.local.name === 'React')\n    );\n  });\n\n  if (reactPaths.size() > 1) {\n    throw Error(\n      'There should only be one React import. Please remove the duplicate import and try again.',\n    );\n  }\n\n  if (reactPaths.size() === 0) {\n    return null;\n  }\n\n  const reactPath = reactPaths.paths()[0];\n  // Reuse the node so that we can preserve quoting style.\n  const reactLiteral = reactPath.value.source;\n\n  const isDefaultImport = reactPath.value.specifiers.some(\n    specifier =>\n      specifier.type === 'ImportDefaultSpecifier' &&\n      specifier.local.name === 'React',\n  );\n\n  // Check to see if we should keep the React import\n  const isReactImportUsed =\n    root\n      .find(j.Identifier, {\n        name: 'React',\n      })\n      .filter(path => {\n        return path.parent.parent.value.type !== 'ImportDeclaration';\n      })\n      .size() > 0;\n\n  // local: imported\n  const reactIdentifiers = {};\n  const reactTypeIdentifiers = {};\n  let canDestructureReactVariable = false;\n  if (isReactImportUsed && (isDefaultImport || destructureNamespaceImports)) {\n    // Checks to see if the react variable is used itself (rather than used to access its properties)\n    canDestructureReactVariable =\n      root\n        .find(j.Identifier, {\n          name: 'React',\n        })\n        .filter(path => {\n          return path.parent.parent.value.type !== 'ImportDeclaration';\n        })\n        .filter(\n          path =>\n            !(\n              path.parent.value.type === 'MemberExpression' &&\n              path.parent.value.object.name === 'React'\n            ) &&\n            !(\n              path.parent.value.type === 'QualifiedTypeIdentifier' &&\n              path.parent.value.qualification.name === 'React'\n            ) &&\n            !(\n              path.parent.value.type === 'JSXMemberExpression' &&\n              path.parent.value.object.name === 'React'\n            ),\n        )\n        .size() === 0;\n\n    if (canDestructureReactVariable) {\n      // Add React identifiers to separate object so we can destructure the imports\n      // later if we can. If a type variable that we are trying to import has already\n      // been declared, do not try to destructure imports\n      // (ex. Element is declared and we are using React.Element)\n      root\n        .find(j.QualifiedTypeIdentifier, {\n          qualification: {\n            type: 'Identifier',\n            name: 'React',\n          },\n        })\n        .forEach(path => {\n          const id = path.value.id.name;\n          if (path.parent.parent.value.type === 'TypeofTypeAnnotation') {\n            // This is a typeof import so it isn't actually a type\n            reactIdentifiers[id] = id;\n\n            if (reactTypeIdentifiers[id]) {\n              canDestructureReactVariable = false;\n            }\n          } else {\n            reactTypeIdentifiers[id] = id;\n\n            if (reactIdentifiers[id]) {\n              canDestructureReactVariable = false;\n            }\n          }\n\n          if (isVariableDeclared(id)) {\n            canDestructureReactVariable = false;\n          }\n        });\n\n      // Add React identifiers to separate object so we can destructure the imports\n      // later if we can. If a variable that we are trying to import has already\n      // been declared, do not try to destructure imports\n      // (ex. createElement is declared and we are using React.createElement)\n      root\n        .find(j.MemberExpression, {\n          object: {\n            type: 'Identifier',\n            name: 'React',\n          },\n        })\n        .forEach(path => {\n          const property = path.value.property.name;\n          reactIdentifiers[property] = property;\n\n          if (isVariableDeclared(property) || reactTypeIdentifiers[property]) {\n            canDestructureReactVariable = false;\n          }\n        });\n\n      // Add React identifiers to separate object so we can destructure the imports\n      // later if we can. If a JSX variable that we are trying to import has already\n      // been declared, do not try to destructure imports\n      // (ex. Fragment is declared and we are using React.Fragment)\n      root\n        .find(j.JSXMemberExpression, {\n          object: {\n            type: 'JSXIdentifier',\n            name: 'React',\n          },\n        })\n        .forEach(path => {\n          const property = path.value.property.name;\n          reactIdentifiers[property] = property;\n\n          if (isVariableDeclared(property) || reactTypeIdentifiers[property]) {\n            canDestructureReactVariable = false;\n          }\n        });\n    }\n  }\n\n  if (canDestructureReactVariable) {\n    // replace react identifiers\n    root\n      .find(j.QualifiedTypeIdentifier, {\n        qualification: {\n          type: 'Identifier',\n          name: 'React',\n        },\n      })\n      .forEach(path => {\n        const id = path.value.id.name;\n\n        j(path).replaceWith(j.identifier(id));\n      });\n\n    root\n      .find(j.MemberExpression, {\n        object: {\n          type: 'Identifier',\n          name: 'React',\n        },\n      })\n      .forEach(path => {\n        const property = path.value.property.name;\n\n        j(path).replaceWith(j.identifier(property));\n      });\n\n    root\n      .find(j.JSXMemberExpression, {\n        object: {\n          type: 'JSXIdentifier',\n          name: 'React',\n        },\n      })\n      .forEach(path => {\n        const property = path.value.property.name;\n\n        j(path).replaceWith(j.jsxIdentifier(property));\n      });\n\n    // Add exisiting React imports to map\n    reactImportPaths.forEach(path => {\n      const specifiers = path.value.specifiers;\n      for (let i = 0; i < specifiers.length; i++) {\n        const specifier = specifiers[i];\n        // get all type and regular imports that are imported\n        // from React\n        if (specifier.type === 'ImportSpecifier') {\n          if (\n            path.value.importKind === 'type' ||\n            specifier.importKind === 'type'\n          ) {\n            reactTypeIdentifiers[specifier.local.name] =\n              specifier.imported.name;\n          } else {\n            reactIdentifiers[specifier.local.name] = specifier.imported.name;\n          }\n        }\n      }\n    });\n\n    const regularImports = [];\n    Object.keys(reactIdentifiers).forEach(local => {\n      const imported = reactIdentifiers[local];\n      regularImports.push(\n        j.importSpecifier(j.identifier(imported), j.identifier(local)),\n      );\n    });\n\n    const typeImports = [];\n    Object.keys(reactTypeIdentifiers).forEach(local => {\n      const imported = reactTypeIdentifiers[local];\n      typeImports.push(\n        j.importSpecifier(j.identifier(imported), j.identifier(local)),\n      );\n    });\n\n    if (regularImports.length > 0) {\n      j(reactPath).insertAfter(\n        j.importDeclaration(regularImports, reactLiteral),\n      );\n    }\n    if (typeImports.length > 0) {\n      j(reactPath).insertAfter(\n        j.importDeclaration(typeImports, reactLiteral, 'type'),\n      );\n    }\n\n    // remove all old react imports\n    reactImportPaths.forEach(path => {\n      // This is for import type React from 'react' which shouldn't\n      // be removed\n      if (\n        path.value.specifiers.some(\n          specifier =>\n            specifier.type === 'ImportDefaultSpecifier' &&\n            specifier.local.name === 'React' &&\n            (specifier.importKind === 'type' ||\n              path.value.importKind === 'type'),\n        )\n      ) {\n        j(path).insertAfter(\n          j.importDeclaration(\n            [j.importDefaultSpecifier(j.identifier('React'))],\n            reactLiteral,\n            'type',\n          ),\n        );\n      }\n      j(path).remove();\n    });\n  } else {\n    // Remove the import because it's not being used\n    // If we should keep the React import, just convert\n    // default imports to named imports\n    let isImportRemoved = false;\n    const specifiers = reactPath.value.specifiers;\n    for (let i = 0; i < specifiers.length; i++) {\n      const specifier = specifiers[i];\n      if (specifier.type === 'ImportNamespaceSpecifier') {\n        if (!isReactImportUsed) {\n          isImportRemoved = true;\n          j(reactPath).remove();\n        }\n      } else if (specifier.type === 'ImportDefaultSpecifier') {\n        if (isReactImportUsed) {\n          j(reactPath).insertAfter(\n            j.importDeclaration(\n              [j.importNamespaceSpecifier(j.identifier('React'))],\n              reactLiteral,\n            ),\n          );\n        }\n\n        if (specifiers.length > 1) {\n          const typeImports = [];\n          const regularImports = [];\n          for (let x = 0; x < specifiers.length; x++) {\n            if (specifiers[x].type !== 'ImportDefaultSpecifier') {\n              if (specifiers[x].importKind === 'type') {\n                typeImports.push(specifiers[x]);\n              } else {\n                regularImports.push(specifiers[x]);\n              }\n            }\n          }\n          if (regularImports.length > 0) {\n            j(reactPath).insertAfter(\n              j.importDeclaration(regularImports, reactLiteral),\n            );\n          }\n          if (typeImports.length > 0) {\n            j(reactPath).insertAfter(\n              j.importDeclaration(typeImports, reactLiteral, 'type'),\n            );\n          }\n        }\n\n        isImportRemoved = true;\n        j(reactPath).remove();\n      }\n    }\n\n    if (!isImportRemoved) {\n      return null;\n    }\n  }\n\n  // If the first node has been modified or deleted, reattach the comments\n  const firstNode2 = getFirstNode();\n  if (firstNode2 !== firstNode) {\n    firstNode2.comments = comments;\n  }\n\n  return root.toSource(printOptions);\n};\n"],"mappings":"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"}},"mtime":1671828858503},"{\"assumptions\":{},\"sourceRoot\":\"/Users/nikola/.npm/_npx/968b6945ac80b57b/node_modules/jscodeshift/parser/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/nikola/Desktop/react-first-app\",\"filename\":\"/Users/nikola/.npm/_npx/968b6945ac80b57b/node_modules/jscodeshift/parser/flow.js\",\"targets\":{\"android\":\"4.4.3\",\"chrome\":\"103.0.0\",\"edge\":\"106.0.0\",\"firefox\":\"106.0.0\",\"ios\":\"12.2.0\",\"opera\":\"91.0.0\",\"safari\":\"13.1.0\",\"samsung\":\"18.0.0\"},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nikola/Desktop/react-first-app\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.7:development":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst flowParser = require('flow-parser');\nconst defaultOptions = {\n  enums: true,\n  esproposal_class_instance_fields: true,\n  esproposal_class_static_fields: true,\n  esproposal_decorators: true,\n  esproposal_export_star_as: true,\n  esproposal_optional_chaining: true,\n  esproposal_nullish_coalescing: true,\n  tokens: true,\n  types: true\n};\n\n/**\n * Wrapper to set default options\n */\nmodule.exports = function (options = defaultOptions) {\n  return {\n    parse(code) {\n      return flowParser.parse(code, options);\n    }\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmbG93UGFyc2VyIiwicmVxdWlyZSIsImRlZmF1bHRPcHRpb25zIiwiZW51bXMiLCJlc3Byb3Bvc2FsX2NsYXNzX2luc3RhbmNlX2ZpZWxkcyIsImVzcHJvcG9zYWxfY2xhc3Nfc3RhdGljX2ZpZWxkcyIsImVzcHJvcG9zYWxfZGVjb3JhdG9ycyIsImVzcHJvcG9zYWxfZXhwb3J0X3N0YXJfYXMiLCJlc3Byb3Bvc2FsX29wdGlvbmFsX2NoYWluaW5nIiwiZXNwcm9wb3NhbF9udWxsaXNoX2NvYWxlc2NpbmciLCJ0b2tlbnMiLCJ0eXBlcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJvcHRpb25zIiwicGFyc2UiLCJjb2RlIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvbmlrb2xhLy5ucG0vX25weC85NjhiNjk0NWFjODBiNTdiL25vZGVfbW9kdWxlcy9qc2NvZGVzaGlmdC9wYXJzZXIvIiwic291cmNlcyI6WyJmbG93LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGZsb3dQYXJzZXIgPSByZXF1aXJlKCdmbG93LXBhcnNlcicpO1xuXG5jb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgZW51bXM6IHRydWUsXG4gIGVzcHJvcG9zYWxfY2xhc3NfaW5zdGFuY2VfZmllbGRzOiB0cnVlLFxuICBlc3Byb3Bvc2FsX2NsYXNzX3N0YXRpY19maWVsZHM6IHRydWUsXG4gIGVzcHJvcG9zYWxfZGVjb3JhdG9yczogdHJ1ZSxcbiAgZXNwcm9wb3NhbF9leHBvcnRfc3Rhcl9hczogdHJ1ZSxcbiAgZXNwcm9wb3NhbF9vcHRpb25hbF9jaGFpbmluZzogdHJ1ZSxcbiAgZXNwcm9wb3NhbF9udWxsaXNoX2NvYWxlc2Npbmc6IHRydWUsXG4gIHRva2VuczogdHJ1ZSxcbiAgdHlwZXM6IHRydWUsXG59O1xuXG4vKipcbiAqIFdyYXBwZXIgdG8gc2V0IGRlZmF1bHQgb3B0aW9uc1xuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9wdGlvbnM9ZGVmYXVsdE9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBwYXJzZShjb2RlKSB7XG4gICAgICByZXR1cm4gZmxvd1BhcnNlci5wYXJzZShjb2RlLCBvcHRpb25zKTtcbiAgICB9LFxuICB9O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFlBQVk7O0FBRVosTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsYUFBYSxDQUFDO0FBRXpDLE1BQU1DLGNBQWMsR0FBRztFQUNyQkMsS0FBSyxFQUFFLElBQUk7RUFDWEMsZ0NBQWdDLEVBQUUsSUFBSTtFQUN0Q0MsOEJBQThCLEVBQUUsSUFBSTtFQUNwQ0MscUJBQXFCLEVBQUUsSUFBSTtFQUMzQkMseUJBQXlCLEVBQUUsSUFBSTtFQUMvQkMsNEJBQTRCLEVBQUUsSUFBSTtFQUNsQ0MsNkJBQTZCLEVBQUUsSUFBSTtFQUNuQ0MsTUFBTSxFQUFFLElBQUk7RUFDWkMsS0FBSyxFQUFFO0FBQ1QsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsVUFBU0MsT0FBTyxHQUFDWixjQUFjLEVBQUU7RUFDaEQsT0FBTztJQUNMYSxLQUFLLENBQUNDLElBQUksRUFBRTtNQUNWLE9BQU9oQixVQUFVLENBQUNlLEtBQUssQ0FBQ0MsSUFBSSxFQUFFRixPQUFPLENBQUM7SUFDeEM7RUFDRixDQUFDO0FBQ0gsQ0FBQyJ9","map":{"version":3,"names":["flowParser","require","defaultOptions","enums","esproposal_class_instance_fields","esproposal_class_static_fields","esproposal_decorators","esproposal_export_star_as","esproposal_optional_chaining","esproposal_nullish_coalescing","tokens","types","module","exports","options","parse","code"],"sourceRoot":"/Users/nikola/.npm/_npx/968b6945ac80b57b/node_modules/jscodeshift/parser/","sources":["flow.js"],"sourcesContent":["\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst flowParser = require('flow-parser');\n\nconst defaultOptions = {\n  enums: true,\n  esproposal_class_instance_fields: true,\n  esproposal_class_static_fields: true,\n  esproposal_decorators: true,\n  esproposal_export_star_as: true,\n  esproposal_optional_chaining: true,\n  esproposal_nullish_coalescing: true,\n  tokens: true,\n  types: true,\n};\n\n/**\n * Wrapper to set default options\n */\nmodule.exports = function(options=defaultOptions) {\n  return {\n    parse(code) {\n      return flowParser.parse(code, options);\n    },\n  };\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEzC,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,IAAI;EACXC,gCAAgC,EAAE,IAAI;EACtCC,8BAA8B,EAAE,IAAI;EACpCC,qBAAqB,EAAE,IAAI;EAC3BC,yBAAyB,EAAE,IAAI;EAC/BC,4BAA4B,EAAE,IAAI;EAClCC,6BAA6B,EAAE,IAAI;EACnCC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,UAASC,OAAO,GAACZ,cAAc,EAAE;EAChD,OAAO;IACLa,KAAK,CAACC,IAAI,EAAE;MACV,OAAOhB,UAAU,CAACe,KAAK,CAACC,IAAI,EAAEF,OAAO,CAAC;IACxC;EACF,CAAC;AACH,CAAC"}},"mtime":1671828857424}}